
//! Autogenerated weights for `pallet_parachain_xcnft`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-11-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro`, CPU: `ArmM1`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-template-node
// benchmark
// pallet
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_parachain_xcnft
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;
use crate as pallet_parachain_xcnft;

/// Weight functions for `pallet_parachain_xcnft`.
///
/// 
pub trait WeightInfo {
	fn transfer_collection_empty() -> Weight;
	fn transfer_collection_same_owner() -> Weight;
	fn transfer_collection_other_owners() -> Weight;
	fn transfer_nft() -> Weight;
	fn parse_empty_col() -> Weight;
	fn parse_same_owner_col() -> Weight;
	fn parse_diff_owner_col() -> Weight;
	fn parse_item() -> Weight;
}
 
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `NftModule::Collection` (r:1 w:0)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:1 w:0)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionMetadataOf` (r:1 w:0)
	/// Proof: `NftModule::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `ParachainSystem::RelevantMessagingState` (r:1 w:0)
	/// Proof: `ParachainSystem::RelevantMessagingState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transfer_collection_empty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `487`
		//  Estimated: `3623`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(37_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3623))
			.saturating_add(T::DbWeight::get().reads(4))
	}
	/// Storage: `NftModule::Collection` (r:1 w:0)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:2 w:0)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionMetadataOf` (r:1 w:0)
	/// Proof: `NftModule::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::ItemMetadataOf` (r:1 w:0)
	/// Proof: `NftModule::ItemMetadataOf` (`max_values`: None, `max_size`: Some(122), added: 2597, mode: `MaxEncodedLen`)
	/// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	/// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainSystem::RelevantMessagingState` (r:1 w:0)
	/// Proof: `ParachainSystem::RelevantMessagingState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transfer_collection_same_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `664`
		//  Estimated: `6256`
		// Minimum execution time: 47_000_000 picoseconds.
		Weight::from_parts(51_000_000, 0)
			.saturating_add(Weight::from_parts(0, 6256))
			.saturating_add(T::DbWeight::get().reads(7))
	}
	/// Storage: `NftModule::Collection` (r:1 w:0)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:3 w:0)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionMetadataOf` (r:1 w:0)
	/// Proof: `NftModule::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `XcnftModule::CrossChainProposals` (r:1 w:1)
	/// Proof: `XcnftModule::CrossChainProposals` (`max_values`: None, `max_size`: Some(96000147), added: 96002622, mode: `MaxEncodedLen`)
	/// Storage: `XcnftModule::NextProposalId` (r:1 w:1)
	/// Proof: `XcnftModule::NextProposalId` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	fn transfer_collection_other_owners() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `818`
		//  Estimated: `96003612`
		// Minimum execution time: 48_000_000 picoseconds.
		Weight::from_parts(50_000_000, 0)
			.saturating_add(Weight::from_parts(0, 96003612))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `NftModule::Collection` (r:1 w:0)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:1 w:0)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::ItemMetadataOf` (r:1 w:0)
	/// Proof: `NftModule::ItemMetadataOf` (`max_values`: None, `max_size`: Some(122), added: 2597, mode: `MaxEncodedLen`)
	/// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
	/// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainSystem::RelevantMessagingState` (r:1 w:0)
	/// Proof: `ParachainSystem::RelevantMessagingState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transfer_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `386`
		//  Estimated: `3623`
		// Minimum execution time: 35_000_000 picoseconds.
		Weight::from_parts(38_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3623))
			.saturating_add(T::DbWeight::get().reads(5))
	}
	/// Storage: `NftModule::NextCollectionId` (r:1 w:1)
	/// Proof: `NftModule::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Collection` (r:1 w:1)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionRoleOf` (r:0 w:1)
	/// Proof: `NftModule::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionConfigOf` (r:0 w:1)
	/// Proof: `NftModule::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionAccount` (r:0 w:1)
	/// Proof: `NftModule::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn parse_empty_col() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3`
		//  Estimated: `3549`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(28_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `NftModule::NextCollectionId` (r:1 w:1)
	/// Proof: `NftModule::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Collection` (r:1 w:1)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:1 w:1)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::ItemConfigOf` (r:1 w:1)
	/// Proof: `NftModule::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `XcnftModule::ReceivedCollections` (r:0 w:1)
	/// Proof: `XcnftModule::ReceivedCollections` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionRoleOf` (r:0 w:1)
	/// Proof: `NftModule::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionConfigOf` (r:0 w:1)
	/// Proof: `NftModule::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Account` (r:0 w:1)
	/// Proof: `NftModule::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionAccount` (r:0 w:1)
	/// Proof: `NftModule::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn parse_same_owner_col() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3`
		//  Estimated: `3623`
		// Minimum execution time: 57_000_000 picoseconds.
		Weight::from_parts(58_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3623))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `NftModule::NextCollectionId` (r:1 w:1)
	/// Proof: `NftModule::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Collection` (r:1 w:1)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:1 w:1)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::ItemConfigOf` (r:1 w:1)
	/// Proof: `NftModule::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `XcnftModule::ReceivedCollections` (r:0 w:1)
	/// Proof: `XcnftModule::ReceivedCollections` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionRoleOf` (r:0 w:1)
	/// Proof: `NftModule::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionConfigOf` (r:0 w:1)
	/// Proof: `NftModule::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Account` (r:0 w:1)
	/// Proof: `NftModule::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionAccount` (r:0 w:1)
	/// Proof: `NftModule::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn parse_diff_owner_col() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3`
		//  Estimated: `3623`
		// Minimum execution time: 57_000_000 picoseconds.
		Weight::from_parts(58_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3623))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `NftModule::Collection` (r:1 w:1)
	/// Proof: `NftModule::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `XcnftModule::ReceivedAssets` (r:1 w:1)
	/// Proof: `XcnftModule::ReceivedAssets` (`max_values`: None, `max_size`: Some(44), added: 2519, mode: `MaxEncodedLen`)
	/// Storage: `XcnftModule::SentAssets` (r:1 w:0)
	/// Proof: `XcnftModule::SentAssets` (`max_values`: None, `max_size`: Some(44), added: 2519, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Item` (r:1 w:1)
	/// Proof: `NftModule::Item` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionConfigOf` (r:1 w:0)
	/// Proof: `NftModule::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::CollectionRoleOf` (r:1 w:0)
	/// Proof: `NftModule::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::ItemConfigOf` (r:1 w:1)
	/// Proof: `NftModule::ItemConfigOf` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `NftModule::Account` (r:0 w:1)
	/// Proof: `NftModule::Account` (`max_values`: None, `max_size`: Some(88), added: 2563, mode: `MaxEncodedLen`)
	fn parse_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `458`
		//  Estimated: `3623`
		// Minimum execution time: 55_000_000 picoseconds.
		Weight::from_parts(56_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3623))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(5))
	}
}
